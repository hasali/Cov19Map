<h2>Main App</h2>
    <script src='https://api.mapbox.com/mapbox-gl-js/v2.3.1/mapbox-gl.js'></script>
     <script src="https://d3js.org/d3.v3.min.js"></script>
    <script src="https://d3js.org/topojson.v1.min.js"></script>
<link href='https://api.mapbox.com/mapbox-gl-js/v2.3.1/mapbox-gl.css' rel='stylesheet' />
<link rel="stylesheet" href="http://cdn.leafletjs.com/leaflet-0.7.1/leaflet.css" />
<style type="text/css">
        .leaflet-container{background-color:#fff;}
         .wrapper {
            margin-left: auto;
            margin-right: auto;
            width: 800px;
        }

        .map_mesh {
            fill: none;
            stroke: #fff;
            stroke-width: .5px;
            stroke-linejoin: round;
        }

        .map_outline {
            fill: #ddd;
            stroke: #000;
            stroke-width: 1.5px;
        }

        .map_province {
            fill: #1f77b4;
        }

        .map_province:hover {
            fill: #636363;
            cursor: pointer;
        }
</style>
 <%# <div id='map' style='width: 600px; height: 400px;'></div>
  <script>
    mapboxgl.accessToken = 'pk.eyJ1IjoiaGludSIsImEiOiJja3I1OXRtM3MxeXgwMnJyeGF2M2ZiaDBjIn0.vcPbEcLEd6tDBRyIQR9UqQ';
    var map = new mapboxgl.Map({
    container: 'map',
    style: 'mapbox://styles/hinu/ckrcei4cs12y517pfzzm1rtjw'
    });

    map.setMaxBounds([[-140.798042, 41.838587],[-49.752809,73.148377] ]); 
  </script> %>
  <%# <div id="map2" style="width: 600px; height: 400px"></div>

    <script src="http://code.jquery.com/jquery-1.10.2.min.js"></script>
    <script src="http://cdn.leafletjs.com/leaflet-0.7.1/leaflet.js"></script>
    <script>
        var myGeoJSONPath = '/georef-canada-province.geojson';
        //var myGeoJSONPath = '/custom.geo.json';
        var myCustomStyle = {
            stroke: false,
            fill: true,
            fillColor: '#000',
            fillOpacity: 1
        }
        $.getJSON(myGeoJSONPath,function(data){
            var map = L.map('map2').setView([58.74739, -98], 3.4);

            L.geoJson(data, {
                clickable: false,
                style: myCustomStyle
            }).addTo(map);
        })
    </script> %>
    <div class="wrapper"></div> 
    <script>

        
        var mapWidth = 900,
            mapHeight = 600;

        var c10 = d3.scale.category10();

        var projection = d3.geo.albers();

        var path = d3.geo.path()
            .projection(projection);

        var svg = d3.select(".wrapper").append("svg")
            .attr("width", mapWidth)
            .attr("height", mapHeight);

        var mapLabel = svg.append("text")
            .attr("y", 20)
            .attr("x", 0)
            .attr("class", "map_province_name")

        // load TopoJSON file of Canada
        d3.json("/canadaprovtopo.json", function(error, canada) {
          if (error) throw error;

          var provinces = topojson.feature(canada, canada.objects.canadaprov); 

          // set default projection values 
          projection
              .scale(1)
              .translate([0, 0]);

          // creates bounding box and helps with projection and scaling
          var b = path.bounds(provinces),
              s = .95 / Math.max((b[1][0] - b[0][0]) / mapWidth, (b[1][1] - b[0][1]) / mapHeight),
              t = [(mapWidth - s * (b[1][0] + b[0][0])) / 2, (mapHeight - s * (b[1][1] + b[0][1])) / 2];

          // set project with bounding box data
          projection
              .scale(s)
              .translate(t);

          // get individual provinces
          svg.selectAll("path")
                .data(provinces.features)
              .enter().append("path")
                .attr("class", "map_province")
                .attr("d", path)
                .on("mouseover", mouseover) 
                .on("mouseout", mouseout)
                .on("click", clicked)

          // add the mesh/path between provinces
          svg.append("path")
                .datum(topojson.mesh(canada, canada.objects.canadaprov, function(a, b) { return a !== b; }))
                .attr("class", "map_mesh")
                .attr("d", path);
          
          console.log(provinces.features);

        });
        d3.csv("/prov_loc.csv", function(data) {
            console.log(data[0].Name);
            svg.selectAll("circle")
	        .data(data)
	        .enter()
	        .append("circle")
	        .attr("cx", function(d) {
		        return projection([d.long, d.lat])[0];
                
	        })
	        .attr("cy", function(d) {
		        return projection([d.long, d.lat])[1];
	        })
	        .attr("r", function(d) {
		        return 20;
	        })
		    .style("fill", "rgb(217,91,67)")	
		    .style("opacity", 0.85)	
            
        });
        // d3.csv('/vaccinations.csv', function(data){
        //     for(var i=0; i< data.length; i++){
        //         console.log(data[i].prename);
        //         console.log(data[i].numtotal_all_administered);
        //     }
        // });
        function mouseover(d) {     
          mapLabel.text(d.properties.name.slice(0,-5)) // remove suffix id from name
        }

        function mouseout(d) {     
          mapLabel.text("")  // remove out name
        }

        function clicked(d) {
          console.log(d.id, d.properties.name) // verify everything looks good
          // Add code here
        }

    </script> 
    <%# georef-canada-province.geojson %>