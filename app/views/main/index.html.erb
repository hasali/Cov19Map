
<h2>Main App</h2>
<%# <script src="https://d3js.org/d3.v7.min.js"></script> %>
<script src="https://unpkg.com/topojson"></script>
<script src="https://unpkg.com/d3-simple-slider@1.10"></script>
<%# <script src="https://d3js.org/d3.v6.min.js"></script>
<script src="https://d3js.org/topojson.v1.min.js"></script> %>
  
<style type="text/css">
path {
  stroke: white;
  stroke-width: 0.25px;
  fill: grey;
}
        .leaflet-container{background-color:#fff;}
         .wrapper {
            margin-left: auto;
            margin-right: auto;
            width: 800px;
        }

        .map_mesh {
            fill: none;
            stroke: #fff;
            stroke-width: .5px;
            stroke-linejoin: round;
        }

        .map_outline {
            fill: #ddd;
            stroke: #000;
            stroke-width: 1.5px;
        }

        .map_province {
            fill: #1f77b4;
        }

        .map_province:hover {
            fill: #636363;
            cursor: pointer;
        }
            .ticks {
      font-size: 10px;
    }

    .track,
    .track-inset,
    .track-overlay {
      stroke-linecap: round;
    }

    .track {
      stroke: #000;
      stroke-opacity: 0.3;
      stroke-width: 10px;
    }

    .track-inset {
      stroke: #ddd;
      stroke-width: 8px;
    }

    .track-overlay {
      pointer-events: stroke;
      stroke-width: 50px;
      stroke: transparent;
      cursor: crosshair;
    }

    .handle {
      fill: #fff;
      stroke: #000;
      stroke-opacity: 0.5;
      stroke-width: 1.25px;
    }
</style>

    <div class="wrapper"></div> 
    <div class="value-time"></div>
    <p>
  <label for="nRadius" 
         style="display: inline-block; width: 300px; text-align: right">
        <span id="value">â€¦</span>
  </label>
  <input type="range" min="0" max="11" id="nRadius">
</p>
    <%#
    <script>
        

        // const parseTime = d3.timeParse("%Y-%m-%d");
        // var mapWidth = 900,
        //     mapHeight = 600;

        // var c10 = d3.scaleOrdinal(d3.schemeCategory10);

        // var projection = d3.geoAlbers();

        // var path = d3.geoPath()
        //   .projection(projection);

        // var svg = d3.select(".wrapper").append("svg")
        //     .attr("width", mapWidth)
        //     .attr("height", mapHeight);

        // var mapLabel = svg.append("text")
        //     .attr("y", 20)
        //     .attr("x", 0)
        //     .attr("class", "map_province_name")

        // // load TopoJSON file of Canada
        // d3.json("/canadaprovtopo.json").then(function(canada) {
        //   //if (error) throw error;

        //   var provinces = topojson.feature(canada, canada.objects.canadaprov); 

        //   // set default projection values 
        //   projection
        //       .scale(1)
        //       .translate([0, 0]);

        //   // creates bounding box and helps with projection and scaling
        //   var b = path.bounds(provinces),
        //       s = .95 / Math.max((b[1][0] - b[0][0]) / mapWidth, (b[1][1] - b[0][1]) / mapHeight),
        //       t = [(mapWidth - s * (b[1][0] + b[0][0])) / 2, (mapHeight - s * (b[1][1] + b[0][1])) / 2];

        //   // set project with bounding box data
        //   projection
        //       .scale(s)
        //       .translate(t);

        //   // get individual provinces
        //   svg.selectAll("path")
        //         .data(provinces.features)
        //       .enter().append("path")
        //         .attr("class", "map_province")
        //         .attr("d", path)
        //         .on("mouseover", mouseover) 
        //         .on("mouseout", mouseout)
        //         .on("click", clicked)

        //   // add the mesh/path between provinces
        //   svg.append("path")
        //         .datum(topojson.mesh(canada, canada.objects.canadaprov, function(a, b) { return a !== b; }))
        //         .attr("class", "map_mesh")
        //         .attr("d", path);
          
        //   console.log(provinces.features);
        // console.log(provinces.features[0].properties.name)

        // });
        // d3.csv("/prov_loc.csv").then(function(data) {
        //     console.log(data);
        //     svg.selectAll("circle")
	    //     .data(data)
	    //     .enter()
	    //     .append("circle")
	    //     .attr("cx", function(d) {
		//         return projection([d.long, d.lat])[0];
                
	    //     })
	    //     .attr("cy", function(d) {
		//         return projection([d.long, d.lat])[1];
	    //     })
	    //     .attr("r", function(d) {
		//         return 20;
	    //     })
		//     .style("fill", "rgb(217,91,67)")	
		//     .style("opacity", 0.85)	
            
        // });
        // d3.csv('/vaccinations.csv', (d) => {
            
          
        //     return{
        //         province: d.prename,
        //         doseTotal: +d.numtotal_all_administered,
        //         dose1: +d.numtotal_dose1_administered,
        //         dose2: +d.numtotal_dose2_administered,
        //         dose3: +d.numtotal_dose3_administered 
        //     };
        
            
        // }).then(d => {
        //     console.log(d);
        // });
        // let mouseover = function(d) {  
            
        //   mapLabel.text(d.srcElement.__data__.properties.name) // remove suffix id from name
        // }

        // function mouseout(d) {     
        //   mapLabel.text("")  // remove out name
        // }

        // function clicked(d) {
        //   //Much Later
        // } 
     </script> %>
    <%# georef-canada-province.geojson %>
    <%= javascript_pack_tag 'main_script' %>
    <%# <script src="https://unpkg.com/d3-simple-slider"></script> %>